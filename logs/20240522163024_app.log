
================================================================
2024-05-22 16:30:25,567 - INFO - logging_config - [wrapper:66]
Function basic_configurations called with 0 positional arguments and 6 keyword arguments.
Function basic_configurations - Keyword argument df: DataFrame with shape: (5, 24)
Function basic_configurations - Keyword argument (<class 'str'>) target_language: Japanese
Function basic_configurations - Keyword argument (<class 'str'>) native_language: English
Function basic_configurations - Keyword argument (<class 'list'>) column_names: ['ID', 'word_or_phrase', 'short_phrase', 'short_translation', 'word', 'stem', 'word_type', 'NAN', 'word_translation', 'website', 'target_language', 'translation_language', 'romaji', 'long_romaji', 'time_stamp', 'movie_code', 'source', 'date', 'long_phrase', 'machine_translation', 'human_translation', 'first_jpg', 'second_jpg', 'audio']
Function basic_configurations - Keyword argument (<class 'dict'>) messages: {'synonyms': "Provide me with a translation for {{word}} in {{native_language}}. You can also take into account the context of '{{word}}' in '{{short_phrase}}'. Only provide the translation, nothing else!", 'test': "Say 'test'", 'first_example': 'Give me one more example in {{native_language}} for the usage of {{word}}. Only provide the example, nothing else! Also provide the translation in {{native_language}}.', 'second_example': 'Give me one more example in {{native_language}} for the usage of {{word}}. Only provide the example, nothing else! Also provide the translation in {{native_language}}.', 'explanation': "Please answer in {{native_language}}. Provide me with a brief explanation of '{{stem}}'! You can also take in account the context of '{{word}}' in '{{short_phrase}}'. Be very concise, use a maximum of 15 words! Return the explanation in the form '{{word}}: explanation.'.", 'hint': "Provide me with a brief explanation of '{{word}}' in {{native_language}}. You can also take in account the context of '{{word}}' in '{{short_phrase}}'. Be very concise, use a maximum of 7 words! Return the explanation in the form '{word}: explanation.'. Don't repeat '{{word}}' in the explanation!", 'definition': "Provide me with a brief definition of '{{stem}}'. You can also take into account the context of '{{word}}' in '{{short_phrase}}'. Be very concise, use a maximum of 15 words! Return the explanation in the form '{word}: explanation'.", 'grammar': "First off: be EXTREMELY concise! Always provide the answer in {{native_language}}. Don't answer in whole sentences, only provide short notes! Provide me with a brief explanation of the different grammatical elements in '{{short_phrase}}'. Put <br> tags after every note.", 'conjugation': "First off: be EXTREMELY concise! Always provide the answer in {{native_language}}. Don't answer in whole sentences, only provide short notes! Provide me with a brief explanation of the different grammatical elements in '{{short_phrase}}'. Put <br> tags after every note.", 'long_test_message': 'Write a story that takes you 20 seconds to write! I am testing something here with the chatGPT API call timeout. You need to write a long story for me, so that the API call lasts at least 15 seconds.'}
Function basic_configurations - Keyword argument (<class 'dict'>) examples: {'German': {'synonyms': "For example a translation for 'Baum': tree.", 'first_example': "Like: 'Ich mag es, Äpfel zu essen。<br>I like to eat apples.' ", 'second_example': "Like 'Ich mag keine Äpfel<br>I don't like apples'", 'explanation': "For example 'Haus: ein Ort an dem Menschen leben.'", 'hint': "For example 'essen: to eat'.", 'definition': "For example: 'Haus: ein Ort an dem Menschen leben.'", 'grammar': '"For example for the sentence:  \'In einem Haus leben Menschen\':  - In: in (inside)  - einem Haus:  \'Einem\' indefinite article, dative, neuter nouns, ‘das Haus\'= house  - leben: \'to live\', 3 ps. plural (lebe, lebst, lebt, leben, lebt, leben)  - Menschen: die Menschen der Mensch\' = ‘people\' or \'humans\'.  / 2nd example: ‘Ich mag keine Äpfel’:  - Ich: I, (Me)  - mag: mögen =‘to like’ (mag, magst, mag, mögen, mögt, mögen), present tense (+ accusative)  - keine: \'no\' - negation article, accusative case, plural  (because \'Äpfel\' is plural and accusative reflects the direct object being negated).  - Äpfel: \'apples’, der Apfel, die Äpfel, accusative"\n', 'conjugation': '"For example for the sentence:  \'In einem Haus leben Menschen\':  - In: in (inside)  - einem Haus:  \'Einem\' indefinite article, dative, neuter nouns, ‘das Haus\'= house   - leben: \'to live\', 3 ps. plural (lebe, lebst, lebt, leben, lebt, leben)  - Menschen: die Menschen der Mensch\' = ‘people\' or \'humans\'.  / 2nd example: ‘Ich mage keine Äpfel’:  - Ich: I, (Me)  - mag: mögen =‘to like’ (mag, magst, mag, mögen, mögt, mögen), present tense (+ accusative)  - keine: \'no\'  - negation article, accusative case, plural  (because \'Äpfel\' is plural and accusative reflects the direct object being negated).  - Äpfel: \'apples’, der Apfel, die Äpfel, accusative"  \n'}, 'Japanese': {'synonyms': "For example a synonym for '家': home, house.", 'first_example': '"Like: \'私はりんごを食べるのが好きです。<br> I like to eat apples.\' Don\'t provide romaji or other transliterations!",\n', 'second_example': "Like '私はりんごを食べるのが嫌いです。<br>I hate to eat apples.' Don't provide romaji or other transliterations!", 'explanation': "For example '家: 人々の住む場所です'", 'hint': "For example '食べる: to eat'.", 'definition': "For example: '家: 人々の住む場所です'", 'grammar': '"For example for the sentence: \'クツなんか持って どうすんのさ 靴下も\':  クツなんか: クツ = くつ\u3000(shoes),\u3000何か –> なんか; something, shoething, shoethingy<br>  持って: 持つ, to hold, to have<br>  どうすんの: \'What should I do?\'; どうする, の = question marker<br>  さ: emphasis.<br> 靴下: Socks<br> も: too<br>  Another example: \'あんたも気きまぐれに手てえ出だして 人ひとの仕事しごとをとっちゃならねえ 働はたらかなきゃな  こいつらの魔法まほうは消きえちまうんだ\'  あんたも: あんた = あなた<br>  気きまぐれに: Whimsically (気まぐれ = whim, に = adverbial particle)<br>  手てえ出だして: 手出す = to put out one\'s hand, てえ = colloquial form of ている, Put your hand out, 出す, 出して<br>  人ひとの: Other people\'s (人の = 人の, の = possessive particle)<br>  仕事しごとを: 仕事 = work<br>  とっちゃならねえ: とる + ちゃ + ならない = とってはならない(negative potential form), ちゃ = ては contraction -> とっては -> とっちゃ \'Must not take\'<br>  働はたらかなきゃな: Have to work (働く + ない + なければ + な, contraction of なければならない)<br>  こいつらの: Their (こいつら = these, の = possessive particle)<br>  魔法まほうは: Magic (魔法 = magic, は = topic marker)<br>  消きえちまうんだ: Will disappear (消える + ちまう + んだ, ちまう = contraction of てしまう, んだ = explanatory particle)<br>" \n', 'conjugation': '"For example for the sentence:  \'クツなんか持って どうすんのさ 靴下も\': クツなんか: クツ = くつ\u3000(shoes),\u3000何か –> なんか; something, shoething, shoethingy <br> 持って: 持つ, to hold, to have<br>  どうすんの: \'What should I do?\'; どうする, の = question marker<br>  さ: emphasis.<br> 靴下: Socks<br> も: too<br>  Another example: \'あんたも気きまぐれに手てえ出だして 人ひとの仕事しごとをとっちゃならねえ  働はたらかなきゃな こいつらの魔法まほうは消きえちまうんだ\' あんたも: あんた = あなた<br>  気きまぐれに: Whimsically (気まぐれ = whim, に = adverbial particle)<br>  手てえ出だして: 手出す = to put out one\'s hand, てえ = colloquial form of ている, Put your hand out, 出す, 出して<br>  人ひとの: Other people\'s (人の = 人の, の = possessive particle)<br>  仕事しごとを: 仕事 = work<br>  とっちゃならねえ: とる + ちゃ + ならない = とってはならない(negative potential form), ちゃ = ては contraction -> とっては -> とっちゃ \'Must not take\'<br>  働はたらかなきゃな: Have to work (働く + ない + なければ + な, contraction of なければならない)<br>  こいつらの: Their (こいつら = these, の = possessive particle)<br>  魔法まほうは: Magic (魔法 = magic, は = topic marker)<br> 消きえちまうんだ: Will disappear (消える + ちまう + んだ, ちまう = contraction of てしまう, んだ = explanatory particle)<br>",\n'}, 'French': {'synonyms': "For example a translation for 'arbre': tree.", 'first_example': "Like: 'J'aime manger des fruits。<br>I like to eat fruits.' ", 'second_example': "Like 'J'aime pas ce mec<br>I don't like this guy'", 'explanation': "For example 'maison: ein Ort an dem Menschen leben.'", 'hint': "For example 'essen: to eat'.", 'definition': "For example: 'Haus: ein Ort an dem Menschen leben.'", 'grammar': '"For example for the sentence:  \'Le président vit dans une maison\':  - Le président: The president  - vit: lives, 3rd person singular of the verb \'vivre\'  - dans: in  - une maison: a house  / 2nd example: \'J\'aime pas ce type de musique\':  - J\'aime pas: Je n\'aime pas [Je ne aime pas] = I don\'t like  - type de musique: type of music"\n', 'conjugation': '"For example for the sentence:  \'Le président vit dans une maison\':  - Le président: The president  - vit: 3. ps. vivre = to live (vis, vis, vit, vivons, vivez, vivent) - dans: in  - une maison: a house  / 2nd example: \'J\'aime pas ce type de musique\':  - J\'aime pas: Je n\'aime pas [Je ne aime pas] = I don\'t like, aimer: to like (aime, aimes, aime, aimons, aimez, aiment)  - type de musique: type of music"\n'}, 'Italian': {'synonyms': "For example a translation for 'albero': tree.", 'first_example': "Like: 'Mi piace mangiare la frutta.<br>I like to eat fruit.' ", 'second_example': "Like 'Non mi piace questo ragazzo'<br>I don't like this guy'", 'explanation': "For example 'casa: un luogo dove vivono le persone.'", 'hint': "For example 'mangiare: to eat'.", 'definition': "For example: 'casa: un luogo dove vivono le persone.'", 'grammar': '"For example for the sentence:  \'Il presidente vive in una casa\':  - Il presidente: The president  - vive: 3. ps. \'vivere\': to live (vivo, vivi, vive, viviamo, vivete, vivono)  - in: in  - una casa: a house  / 2nd example: \'Non mi piace questo genere di musica\':  - Non mi piace: I don\'t like (mi piace, ti piace, gli/le piace, ci piace, vi piace, gli/le piace)  - questo genere di musica: this genre of music"\n', 'conjugation': '"For example for the sentence:  \'Il presidente vive in una casa\':  - Il presidente: The president  - vive: 3. ps. \'vivere\': to live (vivo, vivi, vive, viviamo, vivete, vivono)  - in: in  - una casa: a house  / 2nd example: \'Non mi piace questo genere di musica\':  - Non mi piace: I don\'t like (mi piace, ti piace, gli/le piace, ci piace, vi piace, gli/le piace)  - questo genere di musica: this genre of music"'}}
Function basic_configurations returned a tuple of types (<class 'pandas.core.frame.DataFrame'>, <class 'dict'>)
Function basic_configurations executed in 0.0063 seconds
----------------------------------------------------------------


================================================================
2024-05-22 16:30:25,620 - INFO - logging_config - [wrapper:66]
Function create_ai_prompts called with 1 positional arguments and 2 keyword arguments.
Function create_ai_prompts - Argument 0: DataFrame with shape: (5, 25)
Function create_ai_prompts - Keyword argument (<class 'dict'>) merged: {'explanation': "Please answer in {{native_language}}. Provide me with a brief explanation of '{{stem}}'! You can also take in account the context of '{{word}}' in '{{short_phrase}}'. Be very concise, use a maximum of 15 words! Return the explanation in the form '{{word}}: explanation.'. For example '家: 人々の住む場所です'", 'second_example': "Give me one more example in {{native_language}} for the usage of {{word}}. Only provide the example, nothing else! Also provide the translation in {{native_language}}. Like '私はりんごを食べるのが嫌いです。<br>I hate to eat apples.' Don't provide romaji or other transliterations!", 'synonyms': "Provide me with a translation for {{word}} in {{native_language}}. You can also take into account the context of '{{word}}' in '{{short_phrase}}'. Only provide the translation, nothing else! For example a synonym for '家': home, house.", 'test': "Say 'test' ", 'first_example': 'Give me one more example in {{native_language}} for the usage of {{word}}. Only provide the example, nothing else! Also provide the translation in {{native_language}}. "Like: \'私はりんごを食べるのが好きです。<br> I like to eat apples.\' Don\'t provide romaji or other transliterations!",\n', 'conjugation': 'First off: be EXTREMELY concise! Always provide the answer in {{native_language}}. Don\'t answer in whole sentences, only provide short notes! Provide me with a brief explanation of the different grammatical elements in \'{{short_phrase}}\'. Put <br> tags after every note. "For example for the sentence:  \'クツなんか持って どうすんのさ 靴下も\': クツなんか: クツ = くつ\u3000(shoes),\u3000何か –> なんか; something, shoething, shoethingy <br> 持って: 持つ, to hold, to have<br>  どうすんの: \'What should I do?\'; どうする, の = question marker<br>  さ: emphasis.<br> 靴下: Socks<br> も: too<br>  Another example: \'あんたも気きまぐれに手てえ出だして 人ひとの仕事しごとをとっちゃならねえ  働はたらかなきゃな こいつらの魔法まほうは消きえちまうんだ\' あんたも: あんた = あなた<br>  気きまぐれに: Whimsically (気まぐれ = whim, に = adverbial particle)<br>  手てえ出だして: 手出す = to put out one\'s hand, てえ = colloquial form of ている, Put your hand out, 出す, 出して<br>  人ひとの: Other people\'s (人の = 人の, の = possessive particle)<br>  仕事しごとを: 仕事 = work<br>  とっちゃならねえ: とる + ちゃ + ならない = とってはならない(negative potential form), ちゃ = ては contraction -> とっては -> とっちゃ \'Must not take\'<br>  働はたらかなきゃな: Have to work (働く + ない + なければ + な, contraction of なければならない)<br>  こいつらの: Their (こいつら = these, の = possessive particle)<br>  魔法まほうは: Magic (魔法 = magic, は = topic marker)<br> 消きえちまうんだ: Will disappear (消える + ちまう + んだ, ちまう = contraction of てしまう, んだ = explanatory particle)<br>",\n', 'hint': "Provide me with a brief explanation of '{{word}}' in {{native_language}}. You can also take in account the context of '{{word}}' in '{{short_phrase}}'. Be very concise, use a maximum of 7 words! Return the explanation in the form '{word}: explanation.'. Don't repeat '{{word}}' in the explanation! For example '食べる: to eat'.", 'long_test_message': 'Write a story that takes you 20 seconds to write! I am testing something here with the chatGPT API call timeout. You need to write a long story for me, so that the API call lasts at least 15 seconds. ', 'grammar': 'First off: be EXTREMELY concise! Always provide the answer in {{native_language}}. Don\'t answer in whole sentences, only provide short notes! Provide me with a brief explanation of the different grammatical elements in \'{{short_phrase}}\'. Put <br> tags after every note. "For example for the sentence: \'クツなんか持って どうすんのさ 靴下も\':  クツなんか: クツ = くつ\u3000(shoes),\u3000何か –> なんか; something, shoething, shoethingy<br>  持って: 持つ, to hold, to have<br>  どうすんの: \'What should I do?\'; どうする, の = question marker<br>  さ: emphasis.<br> 靴下: Socks<br> も: too<br>  Another example: \'あんたも気きまぐれに手てえ出だして 人ひとの仕事しごとをとっちゃならねえ 働はたらかなきゃな  こいつらの魔法まほうは消きえちまうんだ\'  あんたも: あんた = あなた<br>  気きまぐれに: Whimsically (気まぐれ = whim, に = adverbial particle)<br>  手てえ出だして: 手出す = to put out one\'s hand, てえ = colloquial form of ている, Put your hand out, 出す, 出して<br>  人ひとの: Other people\'s (人の = 人の, の = possessive particle)<br>  仕事しごとを: 仕事 = work<br>  とっちゃならねえ: とる + ちゃ + ならない = とってはならない(negative potential form), ちゃ = ては contraction -> とっては -> とっちゃ \'Must not take\'<br>  働はたらかなきゃな: Have to work (働く + ない + なければ + な, contraction of なければならない)<br>  こいつらの: Their (こいつら = these, の = possessive particle)<br>  魔法まほうは: Magic (魔法 = magic, は = topic marker)<br>  消きえちまうんだ: Will disappear (消える + ちまう + んだ, ちまう = contraction of てしまう, んだ = explanatory particle)<br>" \n', 'definition': "Provide me with a brief definition of '{{stem}}'. You can also take into account the context of '{{word}}' in '{{short_phrase}}'. Be very concise, use a maximum of 15 words! Return the explanation in the form '{word}: explanation'. For example: '家: 人々の住む場所です'"}
Function create_ai_prompts - Keyword argument (<class 'dict'>) config: {'target_language': 'Japanese', 'native_language': 'English', 'wanted_fields': {'synonyms': False, 'test': True, 'explanation': False, 'first_example': False, 'second_example': False, 'hint': False, 'definition': False, 'grammar': False, 'conjugation': False, 'long_test_message': False}}
Function create_ai_prompts returned a DataFrame with shape: (5, 1)
Function create_ai_prompts executed in 0.0531 seconds
----------------------------------------------------------------


================================================================
2024-05-22 16:30:26,151 - INFO - httpx - [_send_single_request:1026]
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
----------------------------------------------------------------


================================================================
2024-05-22 16:30:27,991 - INFO - httpx - [_send_single_request:1026]
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
----------------------------------------------------------------


================================================================
2024-05-22 16:30:28,502 - INFO - httpx - [_send_single_request:1026]
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
----------------------------------------------------------------


================================================================
2024-05-22 16:30:28,919 - INFO - httpx - [_send_single_request:1026]
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
----------------------------------------------------------------


================================================================
2024-05-22 16:30:29,326 - INFO - httpx - [_send_single_request:1026]
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
----------------------------------------------------------------


================================================================
2024-05-22 16:30:29,330 - INFO - logging_config - [wrapper:66]
Function handle_API_errors called with 3 positional arguments and 0 keyword arguments.
Function handle_API_errors - Argument 0 (<class 'function'>): <function get_ai_response at 0x126cc9120>
Function handle_API_errors - Argument 1: DataFrame with shape: (5, 25)
Function handle_API_errors - Argument 2: DataFrame with shape: (5, 1)
Function handle_API_errors returned a DataFrame with shape: (5, 26)
Function handle_API_errors executed in 3.7096 seconds
----------------------------------------------------------------


================================================================
2024-05-22 16:30:29,338 - INFO - logging_config - [wrapper:66]
Function formatting called with 2 positional arguments and 0 keyword arguments.
Function formatting - Argument 0: DataFrame with shape: (5, 26)
Function formatting - Argument 1 (<class 'dict'>): {'target_language': 'Japanese', 'native_language': 'English', 'wanted_fields': {'synonyms': False, 'test': True, 'explanation': False, 'first_example': False, 'second_example': False, 'hint': False, 'definition': False, 'grammar': False, 'conjugation': False, 'long_test_message': False}}
Function formatting returned (<class 'NoneType'>): None
Function formatting executed in 0.0077 seconds
----------------------------------------------------------------


================================================================
2024-05-22 16:30:29,446 - INFO - logging_config - [main:49]
Dataframe after furigana:                                                   ID  ...                                              notes
0  WORD| 子[こ]|jaSpirited__Away2024-01-26__13:02__...  ...  Haku, I no longer blame you for what you did.\...
1  WORD| 代[か]わり|jaSpirited__Away2024-01-26__13:02...  ...  Haku, I no longer blame you for what you did.\...
2  WORD| 事[こと]|jaSpirited__Away2024-01-26__13:02_...  ...  Look, Granny, Haku's alive.\nHaku, I no longer...
3  WORD| 生[い]きる|jaSpirited__Away2024-01-26__13:02...  ...  Good timing, I'd say.\nLook, Granny, Haku's al...
4  WORD|タイミング|jaSpirited__Away2024-01-26__13:02__...  ...  Thank goodness.\nGood timing, I'd say.\nLook, ...

[5 rows x 38 columns]
----------------------------------------------------------------

